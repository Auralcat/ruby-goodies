#!/usr/bin/env ruby

# The idea here is to generate a CSS file from a HTML file.
# We'll use Nokogiri to do the parsing
require 'nokogiri'

def extract_classes(html_file)
  # Returns an array with single occurrences of
  # the classes found in the document
  out = []
  html_file.css('*').each do |element|
    class_string = element.attr('class')
    out.concat(class_string.split(' ')) unless class_string.nil?
  end
  out.uniq.reject { |x| x == '' }
end

# Open local file using Nokogiri
html_file = Nokogiri::HTML(ARGF.read)

# Put all found classes in here
html_classes = extract_classes(html_file)

puts "#{html_classes.length} classes have been scraped."

# Write CSS class body
output = "/* This file has been generated by css_primer.rb */\n\n"
html_classes.each do |item|
  output += ".#{item} {\n\n}\n\n"
end

# Write this to a file
File.open('test_output.css', 'w') { |file| file.write(output) }
